- right_prediction_icon = 'fa-check match-result__correct-prediction'
- wrong_prediction_icon = 'fa-times match-result__wrong-prediction'

- @presenter.completed_matches.each do |day, matches|
  .card.match-list__header
    .card-header #{day.strftime('%b %d')}

  - matches.each do |match|
    - prediction = @presenter.prediction(match) || Prediction.new
    .card.match-list__card
      .card-header.d-flex.justify-content-center.match-list__card-header class="#{prediction.persisted? ? 'match-list__card-header--predicted' : ''}" id="match#{match.id}-header" data-toggle="collapse" data-target="#match#{match.id}-details" aria-expanded="true" aria-controls="match#{match.id}-details"
        .d-none.d-md-block.my-auto.match-card__team-name.text-right #{match.team_1.full_name.capitalize}
        .d-md-none.my-auto.match-card__team-name.text-right #{match.team_1.short_name.upcase}
        = image_tag match.team_1.flag, class: 'match-card__flag match-card__left-flag'
        .match-card__kick-off.d-flex
          .kick-off__time #{match.team_1_goals.to_s + '-' + match.team_2_goals.to_s}
        = image_tag match.team_2.flag, class: 'match-card__flag match-card__right-flag'
        .d-none.my-auto.d-md-block.match-card__team-name.text-left #{match.team_2.full_name.capitalize}
        .d-md-none.my-auto.match-card__team-name.text-left #{match.team_2.short_name.upcase}
      .collapse id="match#{match.id}-details" aria-labelledby="match#{match.id}-header" data-parent="#completed"
        .card-body.match-card__card-body
          - if match.knock_out?
            .match-result__decider-notice
              | Match Decider: #{match.decider}
          ul.nav.nav-tabs.justify-content-center.match-list__tabs role='tablist' id='resultTabs'
            - @presenter.groups.each_with_index do |group, index|
              li.nav-item
                a.nav-link.font-weight-bold id="group#{group.id}-tab" data-toggle="tab" href="#group#{group.id}match#{match.id}" role="tab" class=(index == 0 ? 'active' : '') #{group.name}

          .tab-content id='resultTabsContent'
            - @presenter.predictions_result.each_with_index do |(group_id, results), index|
              .tab-pane.fade id="group#{group_id}match#{match.id}" role="tabpanel" class=(index == 0 ? 'show active' : '')
                .table-responsive
                  table.table.table-striped
                    thead.text-center
                      tr
                        th Player
                        th Prediction
                        th Result
                        th Score
                        - if match.knock_out?
                          th Decider
                        th Points
                    tbody.text-center
                      - results[match.id].each do |result|
                        - user = User.find(result[:user_id])
                        tr class="#{user == current_user ? 'current-user-row' : ''}"
                          td #{user.nick_name}
                          - user_prediction = Prediction.where(user_id: result[:user_id], match_id: match.id).first
                          - prediction_text = user_prediction.present? ? user_prediction.short_text : 'N/A'
                          td #{prediction_text}
                          - icon_for_result = result[:match_result] ? right_prediction_icon : wrong_prediction_icon
                          td
                            i.fa class='#{icon_for_result}'
                          - icon_for_score = result[:score] ? right_prediction_icon : wrong_prediction_icon
                          td
                            i.fa class='#{icon_for_score}'
                          - if match.knock_out?
                            - icon_for_decider = result[:decider] ? right_prediction_icon : wrong_prediction_icon
                            td
                              i.fa class='#{icon_for_decider}'
                          td class="#{result[:match_share].negative? ? 'red-text' : 'green-text'}" #{result[:match_share].positive? ? '+' : ''}#{'%g' % result[:match_share].round(1)}
