.predictions-table__container
  .row#predictions-table__header
    - prediction = current_user.predictions.where(match: match).first
    .col-md-6.my-3.predictions-table-header__left-pane
      - if match.completed?
        div Match Complete
        .predictions-table-header__sub-text Result: #{match.summary_text}
      - else
        div Match Ongoing!
        - if prediction.present?
          .predictions-table-header__sub-text Good luck with your prediction
        - else
          .predictions-table-header__sub-text Predictions are now locked.
    .col-md-6.my-3
      - if prediction.present?
        div Your Prediction:
        .predictions-table-header__sub-text #{prediction.summary_text}
      - else
        .predictions-table-header__sub-text You missed prediction.
  .row.d-flex.mx-0.prediction-table__toggle-bar.justify-content-center
    .prediction-table__toggle-btn id="prediction-table__toggle-btn-#{match.id}" data-toggle="collapse" href="#prediction-table-#{match.id}"
      i.fa.fa-angle-double-down
      | &nbsp;View Predictions&nbsp;
      i.fa.fa-angle-double-down

  .collapse.js-prediction-table__collapse id="prediction-table-#{match.id}" data-parent="#matches-#{match.kick_off.strftime('%b%d')}" data-match-id=match.id
    - if match.locked? && !match.completed?
      .tab-content id='predictionTabsContent'
        - @presenter.predictions_list.each_with_index do |(group_id, predictions), index|
          .tab-pane.fade id="group#{group_id}match#{match.id}" role="tabpanel" class=(index == 0 ? 'show active' : '')
            .table-responsive
              table.table.table-striped.prediction-table
                thead.text-center
                  tr
                    th Player
                    th Prediction
                tbody.text-center
                  - predictions[match.id].each do |prediction|
                    - user = User.find(prediction[:user_id])
                    tr class="#{user == current_user ? 'current-user-row' : ''}"
                      td #{user.nick_name}
                      td #{prediction[:prediction]}

    - if match.completed?
      - right_prediction_icon = 'fa-check match-result__correct-prediction'
      - wrong_prediction_icon = 'fa-times match-result__wrong-prediction'
      .tab-content id='resultTabsContent'
        - @presenter.predictions_result.each_with_index do |(group_id, results), index|
          .tab-pane.fade id="group#{group_id}match#{match.id}" role="tabpanel" class=(index == 0 ? 'show active' : '')
            .table-responsive
              table.table.table-striped.prediction-table
                thead.text-center
                  tr
                    th Player
                    th Prediction
                    th Winner
                    th Score
                    - if match.knock_out?
                      th Decider
                    th Points
                tbody.text-center
                  - results[match.id].each do |result|
                    - user = User.find(result[:user_id])
                    tr class="#{user == current_user ? 'current-user-row' : ''}"
                      td #{user.nick_name}
                      - user_prediction = Prediction.where(user_id: result[:user_id], match_id: match.id).first
                      - prediction_text = user_prediction.present? ? user_prediction.short_text : 'N/A'
                      td #{prediction_text}
                      - icon_for_result = result[:match_result] ? right_prediction_icon : wrong_prediction_icon
                      td
                        i.fa class='#{icon_for_result}'
                      - icon_for_score = result[:score] ? right_prediction_icon : wrong_prediction_icon
                      td
                        i.fa class='#{icon_for_score}'
                      - if match.knock_out?
                        - icon_for_decider = result[:decider] ? right_prediction_icon : wrong_prediction_icon
                        td
                          i.fa class='#{icon_for_decider}'
                      td class="#{result[:match_share].negative? ? 'red-text' : 'green-text'}" #{result[:match_share].positive? ? '+' : ''}#{'%g' % result[:match_share].round(1)}