- decider_label_class = prediction.decider.present? ? 'prediction-form__decider-label--predicted' : ''
- decider_text = prediction.persisted? ? 'Selected Decider' : 'Select Decider'
- knockout_score_class = match.knock_out? ? 'js-knockout-score' : ''
= form_with model: prediction, class: 'row js-new-prediction-form', data: { match_id: match.id } do |f|
  .col-md-2
  .form-group.d-flex.flex-column.col-md-8.align-items-center
    = f.hidden_field :match_id, value: match.id
    .d-flex.justify-content-between.prediction-form__score-inputs
      = f.number_field :team_1_goals, class: "prediction-form__score-input #{knockout_score_class}", min: 0, max: 20
      = f.number_field :team_2_goals, class: "prediction-form__score-input #{knockout_score_class}", min: 0, max: 20
    - if match.knock_out?
      .prediction-form__score-danger-alert.d-none role='alert'
        | Knockouts cannot be a tie!
      .prediction-form__decider-select.align-items-center
        = f.label :decider, decider_text, class: "prediction-form__decider-label #{decider_label_class}"
        = f.select :decider, options_for_select(Match.valid_decider_types, prediction.decider), {}, { class: 'js-decider-select form-control text-center' }
      .prediction-form__penalty-notice.align-items-center.d-none
        | Note: Predicted scores will just be used to decide the winning side
    - submit_text = prediction.persisted? ? 'Update' : 'Submit'
    = f.submit submit_text, class: 'btn btn-primary prediction-form__field'
  .col-md-2